apiVersion: v1
kind: Template
labels:
  template: itdz-jenkins-nfs-persistent-template
  owner: itdz
message: A Jenkins service has been created in your project.  Log into Jenkins with
  your OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md
  contains more information about using this template. 
metadata:
  annotations:
    description: |-
      Jenkins service, with persistent storage. Template for NFS provider
      NOTE: You must have persistent volumes available in your cluster to use this template. And a servicaccount with edit role !!
    iconClass: icon-jenkins
    openshift.io/display-name: Jenkins (Persistent)
    tags: instant-app,jenkins
    template.openshift.io/documentation-url: https://docs.openshift.org/latest/using_images/other_images/jenkins.html
    template.openshift.io/long-description: This template deploys a Jenkins server
      capable of managing OpenShift Pipeline builds and supporting OpenShift-based
      oauth login.
    template.openshift.io/provider-display-name: Red Hat, Inc.
    template.openshift.io/support-url: https://access.redhat.com
  name: itdz-jenkins-nfs-persistent-template
objects:
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    name: ${JENKINS_SERVICE_NAME}
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${JENKINS_SERVICE_NAME}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${JENKINS_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${JENKINS_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${JENKINS_SERVICE_NAME}
      spec:
        containers:
        - capabilities: {}
          env:
          - name: OPENSHIFT_ENABLE_OAUTH
            value: ${ENABLE_OAUTH}
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: "true"
          - name: OPENSHIFT_JENKINS_JVM_ARCH
            value: ${JVM_ARCH}
          - name: KUBERNETES_MASTER
            value:  ${OPENSHIFT_MASTER}
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: "true"
          - name: JNLP_SERVICE_NAME
            value: ${JNLP_SERVICE_NAME}
#          - name: HTTP_PROXY
#            valueFrom:
#                configMapKeyRef:
#                  name: ${CFGM_PROXY}
#                  key: "HTTP_PROXY"
#          - name: HTTPS_PROXY
#            valueFrom:
#                configMapKeyRef:
#                  name: ${CFGM_PROXY}
#                  key: "HTTPS_PROXY"
#          - name: JAVA_OPTS
#            valueFrom:
#                configMapKeyRef:
#                  name: ${CFGM_PROXY}
#                  key: "JAVA_OPTS"
          - name: INSTALL_PLUGINS
            value: "analysis-core:1.92,findbugs:4.71,pmd:3.49,checkstyle:3.49,dependency-check-jenkins-plugin:2.1.1,htmlpublisher:1.14,jacoco:2.2.1,analysis-collector:1.52"
          image: 'registry.redhat.io/openshift/jenkins-2-rhel7'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 30
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 420
            timeoutSeconds: 3
          name: jenkins
          readinessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 300
            timeoutSeconds: 3
          resources:
            limits:
              memory: 4Gi
            requests:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/jenkins
            name: ${JENKINS_SERVICE_NAME}-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
#        serviceAccountName: ${JENKINS_SA_NAME}
        volumes:
        - name: ${JENKINS_SERVICE_NAME}-data
          persistentVolumeClaim:
            claimName: ${VOLUME_NAME}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: ${JENKINS_IMAGE_STREAM_TAG}
          namespace: ${NAMESPACE}
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    name: ${JNLP_SERVICE_NAME}
  spec:
    ports:
    - name: agent
      nodePort: 0
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      name: ${JENKINS_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name": "${JNLP_SERVICE_NAME}",
        "namespace": "", "kind": "Service"}]'
      service.openshift.io/infrastructure: "true"
    name: ${JENKINS_SERVICE_NAME}
  spec:
    ports:
    - name: web
      nodePort: 0
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      name: ${JENKINS_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
parameters:
- description: The name of the OpenShift Service exposed for the Jenkins container.
  displayName: Jenkins Service Name
  name: JENKINS_SERVICE_NAME
  value: jenkins
- description: The name of the OpenShift Service Account used for the Jenkins container.
  displayName: Jenkins SA Name
  name: JENKINS_SA_NAME
  value: jenkins  
- description: The name of the service used for master/slave communication.
  displayName: Jenkins JNLP Service Name
  name: JNLP_SERVICE_NAME
  value: jenkins-jnlp
- description: Whether to enable OAuth OpenShift integration. If false, the static
    account 'admin' will be initialized with the password 'password'.
  displayName: Enable OAuth in Jenkins
  name: ENABLE_OAUTH
  value: "false"
- description: Whether Jenkins runs with a 32 bit (i386) or 64 bit (x86_64) JVM.
  displayName: Jenkins JVM Architecture
  name: JVM_ARCH
  value: x86_64
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 1Gi
- description: Name of Persistent Volume Claim. Since on NFS dynamic provisioning is not supported
  displayName: Volume Name
  name: VOLUME_NAME
  required: true
  value: pv002-backup
- description: ConfigMap containing the environment vars for corporate proxy
  displayName: Proxy Configmap
  name: CFGM_PROXY
  required: true
  value: proxy  
- description: Openshift Master Url
  displayName: Openshift Master Url
  name: OPENSHIFT_MASTER
  required: true
  value: api.dev.paas.verwalt-berlin.de:8443     
- description: The OpenShift Namespace where the Jenkins ImageStream resides.
  displayName: Jenkins ImageStream Namespace
  name: NAMESPACE
  value: openshift
- description: Name of the ImageStreamTag to be used for the Jenkins image.
  displayName: Jenkins ImageStreamTag
  name: JENKINS_IMAGE_STREAM_TAG
  value: jenkins:latest
- description: ConfigMap containing the environment vars for corporate proxy
  displayName: Proxy Configmap
  name: CFGM_PROXY
  required: true
  value: proxy