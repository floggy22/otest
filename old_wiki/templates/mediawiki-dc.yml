apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
  labels:
    app: mediawiki # zeile 6+7 entsprechen Zeile 11+12 und 27+28
  name: mediawiki2
spec:
  replicas: 1
  selector:
    app: mediawiki
    deploymentconfig: mediawiki2
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
      labels:
        app: mediawiki
        deploymentconfig: mediawiki2
    spec:
      containers:
      - image: "docker-registry.default.svc:5000/media-wiki-u6/media-wiki-123-paul:1.0" # Imagespeicherort eintragen, "Auslesen mittels oc get is", Achten auf Endung
        imagePullPolicy: Always
        name: mediawiki
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: /home/www-data/httpd/mediawiki123/LocalSettings.php ## entspricht absoluten Pfad in welchen Datei im Pod liegen soll
            subPath: LocalSettings.php # entspricht Ablagenamen
            name: mediawiki-settings  # Verweis auf Volume (Zeile 45)
      volumes:
      - name: mediawiki-settings # Name des Volumes frei w√§hlbar
        configMap:
          name: configmap-mediawiki # Verweis auf Configmap
          default: 511
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - mediawiki
      from:
        kind: ImageStreamTag
        name: media-wiki-123-paul:1.0 #Name des Images(oc get is)
        namespace: media-wiki-u6 #Namespace = Projektname 
    type: ImageChange
